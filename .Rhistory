httpuv::runStaticServer("site")
install.packages("shinylive")
shinylive::assets_info()
library(pak)
pak("posit-dev/r-shinylive")
shinylive::assets_info()
shinylive::export(".","site")
httpuv::runServer("site")
httpuv::runStaticServer("site")
shinylive::export(".","site")
httpuv::runStaticServer("site")
httpuv::runStaticServer("site")
httpuv::runStaticServer("site")
httpuv::runStaticServer("site")
httpuv::runStaticServer("site")
httpuv::runStaticServer("site")
stopAllServers()
httpuv::stopAllServers()
httpuv::runStaticServer("site")
shinylive::export(".","site")
httpuv::runStaticServer("site",port=4465)
.libPaths()
stopAllServers()
httpuv::stopAllServers()
httpuv::stopAllServers()
httpuv::stopAllServers()
shinylive::export(".","site")
httpuv::runStaticServer("site",port=5687)
install.packages("usethis")
usethis::use_github_action(url="https://github.com/rariariari/urapsummer2024.git")
usethis::use_github_action(url="https://github.com/posit-dev/r-shinylive/blob/actions-v1/examples/deploy-app.yaml")
shinylive::export(".","site")
shinylive::export(".","
site")
shinylive::export(".",site")
a
shinylive::export(".","site")
shinylive::export(".","site")
httpuv::runStaticServer("site",port=3365)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
full_level_dataALL <- fread("schoolnetworkdata/full_level_dataALL.csv")
library(magrittr)
library(dplyr)
library(sf)
library(data.table)
library(leaflet)
library(htmlwidgets)
library(cowplot)
library(shiny)
full_level_dataALL <- fread("schoolnetworkdata/full_level_dataALL.csv")
full_level_dataBACH <- fread("schoolnetworkdata/full_level_dataBACH.csv")
full_level_dataALL1 <- full_level_dataALL[1:100000,]
full_level_dataALL1 <- full_level_dataALL[100000:,]
full_level_dataALL1 <- full_level_dataALL[100000:1478563,]
full_level_dataALL2 <- full_level_dataALL[100000:1478563,]
full_level_dataALL1 <- full_level_dataALL[1:100000,]
full_level_dataALL2 <- full_level_dataALL[1000000:1478563,]
full_level_dataALL1 <- full_level_dataALL[1:1000000,]
full_level_dataBACH1 <- full_level_dataBACH[1:500000,]
full_level_dataBACH1 <- full_level_dataBACH[500000:992732,]
write.csv(full_level_dataALL1,"full_level_dataALL1")
write.csv(full_level_dataALL2,"full_level_dataALL2")
write.csv(full_level_dataBACH1,"full_level_dataBACH1")
full_level_dataALL1 <- full_level_dataALL[1:700000,]
write.csv(full_level_dataALL1,"full_level_dataALL1.csv")
full_level_dataALL2 <- full_level_dataALL[700000:1478563,]
write.csv(full_level_dataALL2,"full_level_dataALL2.csv")
write.csv(full_level_dataBACH1,"full_level_dataBACH1.csv")
write.csv(full_level_dataBACH2,"full_level_dataBACH2")
full_level_dataBACH <- fread("schoolnetworkdata/full_level_dataBACH.csv")
full_level_dataBACH1 <- full_level_dataBACH[1:500000,]
full_level_dataBACH2 <- full_level_dataBACH[500000:992732,]
write.csv(full_level_dataBACH2,"full_level_dataBACH2.csv")
full_level_dataALL1 <- full_level_dataALL[1:750000,]
write.csv(full_level_dataALL1,"full_level_dataALL1.csv")
full_level_dataALL2 <- full_level_dataALL[750000:1478563,]
full_level_dataALL1 <- full_level_dataALL[1:600000,]
full_level_dataALL2 <- full_level_dataALL[600000:1000000,]
full_level_dataALL3 <- full_level_dataALL[1000000:1478563,]
write.csv(full_level_dataALL1,"full_level_dataALL1.csv")
write.csv(full_level_dataALL2,"full_level_dataALL2.csv")
write.csv(full_level_dataALL3,"full_level_dataALL3.csv")
runApp()
View(full_level_dataALL1)
View(full_level_dataALL)
runApp()
runApp()
usethis::use_github_action(url="https://github.com/posit-dev/r-shinylive/blob/actions-v1/examples/deploy-app.yaml")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_sf
runApp()
meow <- cbsa_geomsHighres %>% st_simplify(preserveTopology = TRUE,dTolerance=0.1)
meow %>% ggplot() %>% geom_sf()
mggplot() %>% geom_sf(data=meow)
meow %>% ggplot() + geom_sf()
leaflet() %>% addTiles() %>% addPolygons(meow)
leaflet() %>% addTiles() %>% addPolygons(data=meow)
st_write(meow,"attempt.geojson")
runApp()
runApp()
runApp()
shinylive::export(".","site")
library(shinylive)
library(shiny)
httpuv::runStaticServer("site")
runApp()
?shiny-options
httpuv::runStaticServer("site")
shiny::runApp()
library(cowplot)
?ggdraw
?draw_plot
runApp()
